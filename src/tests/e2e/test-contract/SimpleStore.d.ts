/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface SimpleStoreInterface extends Interface {
  functions: {
    set: TypedFunctionDescription<{ encode([_value]: [BigNumberish]): string }>;

    get: TypedFunctionDescription<{ encode([]: []): string }>;
  };

  events: {
    NewValueSet: TypedEventDescription<{
      encodeTopics([_value]: [BigNumberish | null]): string[];
    }>;
  };
}

export class SimpleStore extends Contract {
  connect(signerOrProvider: Signer | Provider | string): SimpleStore;
  attach(addressOrName: string): SimpleStore;
  deployed(): Promise<SimpleStore>;

  on(event: EventFilter | string, listener: Listener): SimpleStore;
  once(event: EventFilter | string, listener: Listener): SimpleStore;
  addListener(eventName: EventFilter | string, listener: Listener): SimpleStore;
  removeAllListeners(eventName: EventFilter | string): SimpleStore;
  removeListener(eventName: any, listener: Listener): SimpleStore;

  interface: SimpleStoreInterface;

  functions: {
    set(
      _value: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "set(uint256)"(
      _value: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    get(overrides?: TransactionOverrides): Promise<BigNumber>;

    "get()"(overrides?: TransactionOverrides): Promise<BigNumber>;
  };

  set(
    _value: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "set(uint256)"(
    _value: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  get(overrides?: TransactionOverrides): Promise<BigNumber>;

  "get()"(overrides?: TransactionOverrides): Promise<BigNumber>;

  filters: {
    NewValueSet(_value: BigNumberish | null): EventFilter;
  };

  estimate: {
    set(
      _value: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "set(uint256)"(
      _value: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    get(overrides?: TransactionOverrides): Promise<BigNumber>;

    "get()"(overrides?: TransactionOverrides): Promise<BigNumber>;
  };
}
