syntax = "proto3";

message SignedTx {
    bytes inner = 1;
    bytes signature = 2;
    bytes public_key = 3;
}

message NonceTx {
    bytes inner = 1;
    uint64 sequence = 2;
}

message Address {
    string chain_id = 1;
    bytes local = 2;
}

message Transaction {
    uint32 id = 1;
    bytes data = 2;
}

enum VMType {
    PLUGIN = 0;
    EVM = 1;
}

message MessageTx {
    Address to = 1;
    Address from = 2;
    bytes data = 3;
}

message DeployTx {
    VMType vm_type = 1;
    bytes code = 2;
    string name = 3;
}

message DeployResponse {
    Address contract = 1;
    bytes output = 2;
}

message DeployResponseData {
    bytes tx_hash = 1;
    bytes bytecode = 2;
}

message CallTx {
    VMType vm_type = 1;
    bytes input = 2;
}

enum EncodingType {
    JSON = 0;
    PROTOBUF3 = 1;
}

message PluginCode {
    string name = 1;
    bytes input = 2;
}

message Request {
    EncodingType content_type = 1;
    EncodingType accept = 2;
    bytes body = 3;
}

message Response {
    EncodingType content_type = 1;
    bytes body = 2;
}

message ContractMethodCall {
	string method = 1;
	bytes args = 2;
}

message TxHashList {
    repeated bytes tx_hash = 1;
}

message EventDataList {
    repeated EventData events = 1;
}

message EventData {
    repeated string topics = 1;
    Address caller = 2;
    Address address = 3;
    string plugin_name = 4;
    uint64 block_height = 5;
    bytes encoded_body = 6;
    bytes original_request = 7;
    bytes tx_hash = 8;
}

message TxReceiptList {
    repeated EvmTxReceipt tx_receipts = 1;
}

message EvmTxReceipt {
    int32 transaction_index = 1;
    bytes block_hash = 2;
    int64 block_number = 3;
    int32 cumulative_gas_used = 4;
    int32 gas_used = 5 ;
    bytes contract_address = 6;
    repeated EventData logs = 7;
    bytes logs_bloom = 8;
    int32 status = 9;
}

message EthFilterLogList {
    repeated EthFilterLog eth_block_logs = 1;
}

message EthFilterLog {
    bool removed = 1;
    int64 log_index = 2;
    int32 transaction_index = 3;
    bytes transaction_hash = 4;
    bytes block_hash = 5;
    int64 block_number = 6;
    bytes address = 7;
    bytes data = 8;
    repeated bytes topics = 9;
}
