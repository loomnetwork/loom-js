/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface GatewayInterface extends Interface {
  functions: {
    depositERC20: TypedFunctionDescription<{
      encode([amount, contractAddress]: [BigNumberish, string]): string;
    }>;

    withdrawERC20: TypedFunctionDescription<{
      encode([amount, contractAddress, _valIndexes, _v, _r, _s]: [
        BigNumberish,
        string,
        (BigNumberish)[],
        (BigNumberish)[],
        (Arrayish)[],
        (Arrayish)[]
      ]): string;
    }>;

    withdrawERC721X: TypedFunctionDescription<{
      encode([tokenId, amount, contractAddress, _valIndexes, _v, _r, _s]: [
        BigNumberish,
        BigNumberish,
        string,
        (BigNumberish)[],
        (BigNumberish)[],
        (Arrayish)[],
        (Arrayish)[]
      ]): string;
    }>;

    withdrawERC721: TypedFunctionDescription<{
      encode([uid, contractAddress, _valIndexes, _v, _r, _s]: [
        BigNumberish,
        string,
        (BigNumberish)[],
        (BigNumberish)[],
        (Arrayish)[],
        (Arrayish)[]
      ]): string;
    }>;

    withdrawETH: TypedFunctionDescription<{
      encode([amount, _valIndexes, _v, _r, _s]: [
        BigNumberish,
        (BigNumberish)[],
        (BigNumberish)[],
        (Arrayish)[],
        (Arrayish)[]
      ]): string;
    }>;

    onERC721XReceived: TypedFunctionDescription<{
      encode([_operator, _from, _tokenId, _amount, _data]: [
        string,
        string,
        BigNumberish,
        BigNumberish,
        Arrayish
      ]): string;
    }>;

    onERC721XBatchReceived: TypedFunctionDescription<{
      encode([_operator, _from, _types, _amounts, _data]: [
        string,
        string,
        (BigNumberish)[],
        (BigNumberish)[],
        Arrayish
      ]): string;
    }>;

    onERC721Received: TypedFunctionDescription<{
      encode([_operator, _from, _uid, _data]: [
        string,
        string,
        BigNumberish,
        Arrayish
      ]): string;
    }>;
  };

  events: {
    ETHReceived: TypedEventDescription<{
      encodeTopics([from, amount]: [null, null]): string[];
    }>;

    ERC721Received: TypedEventDescription<{
      encodeTopics([operator, from, tokenId, contractAddress, data]: [
        null,
        null,
        null,
        null,
        null
      ]): string[];
    }>;

    ERC721XReceived: TypedEventDescription<{
      encodeTopics([operator, from, tokenId, amount, contractAddress, data]: [
        null,
        null,
        null,
        null,
        null,
        null
      ]): string[];
    }>;

    ERC721XBatchReceived: TypedEventDescription<{
      encodeTopics([operator, to, tokenTypes, amounts, contractAddress, data]: [
        null,
        null,
        null,
        null,
        null,
        null
      ]): string[];
    }>;

    ERC20Received: TypedEventDescription<{
      encodeTopics([from, amount, contractAddress]: [
        null,
        null,
        null
      ]): string[];
    }>;

    TokenWithdrawn: TypedEventDescription<{
      encodeTopics([owner, kind, contractAddress, value]: [
        string | null,
        null,
        null,
        null
      ]): string[];
    }>;

    LoomCoinReceived: TypedEventDescription<{
      encodeTopics([from, amount, loomCoinAddress]: [
        string | null,
        null,
        null
      ]): string[];
    }>;
  };
}

export class Gateway extends Contract {
  connect(signerOrProvider: Signer | Provider | string): Gateway;
  attach(addressOrName: string): Gateway;
  deployed(): Promise<Gateway>;

  on(event: EventFilter | string, listener: Listener): Gateway;
  once(event: EventFilter | string, listener: Listener): Gateway;
  addListener(eventName: EventFilter | string, listener: Listener): Gateway;
  removeAllListeners(eventName: EventFilter | string): Gateway;
  removeListener(eventName: any, listener: Listener): Gateway;

  interface: GatewayInterface;

  functions: {
    getERC20(contractAddress: string): Promise<BigNumber>;

    nonces(arg0: string): Promise<BigNumber>;

    getERC721(uid: BigNumberish, contractAddress: string): Promise<boolean>;

    getERC721X(
      tokenId: BigNumberish,
      contractAddress: string
    ): Promise<BigNumber>;

    depositERC20(
      amount: BigNumberish,
      contractAddress: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    withdrawERC20(
      amount: BigNumberish,
      contractAddress: string,
      _valIndexes: (BigNumberish)[],
      _v: (BigNumberish)[],
      _r: (Arrayish)[],
      _s: (Arrayish)[],
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    withdrawERC721X(
      tokenId: BigNumberish,
      amount: BigNumberish,
      contractAddress: string,
      _valIndexes: (BigNumberish)[],
      _v: (BigNumberish)[],
      _r: (Arrayish)[],
      _s: (Arrayish)[],
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    withdrawERC721(
      uid: BigNumberish,
      contractAddress: string,
      _valIndexes: (BigNumberish)[],
      _v: (BigNumberish)[],
      _r: (Arrayish)[],
      _s: (Arrayish)[],
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    withdrawETH(
      amount: BigNumberish,
      _valIndexes: (BigNumberish)[],
      _v: (BigNumberish)[],
      _r: (Arrayish)[],
      _s: (Arrayish)[],
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    onERC721XReceived(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _amount: BigNumberish,
      _data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    onERC721XBatchReceived(
      _operator: string,
      _from: string,
      _types: (BigNumberish)[],
      _amounts: (BigNumberish)[],
      _data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    onERC721Received(
      _operator: string,
      _from: string,
      _uid: BigNumberish,
      _data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    loomAddress(): Promise<string>;
    getETH(): Promise<BigNumber>;
  };

  filters: {
    ETHReceived(from: null, amount: null): EventFilter;

    ERC721Received(
      operator: null,
      from: null,
      tokenId: null,
      contractAddress: null,
      data: null
    ): EventFilter;

    ERC721XReceived(
      operator: null,
      from: null,
      tokenId: null,
      amount: null,
      contractAddress: null,
      data: null
    ): EventFilter;

    ERC721XBatchReceived(
      operator: null,
      to: null,
      tokenTypes: null,
      amounts: null,
      contractAddress: null,
      data: null
    ): EventFilter;

    ERC20Received(from: null, amount: null, contractAddress: null): EventFilter;

    TokenWithdrawn(
      owner: string | null,
      kind: null,
      contractAddress: null,
      value: null
    ): EventFilter;

    LoomCoinReceived(
      from: string | null,
      amount: null,
      loomCoinAddress: null
    ): EventFilter;
  };

  estimate: {
    depositERC20(
      amount: BigNumberish,
      contractAddress: string
    ): Promise<BigNumber>;

    withdrawERC20(
      amount: BigNumberish,
      contractAddress: string,
      _valIndexes: (BigNumberish)[],
      _v: (BigNumberish)[],
      _r: (Arrayish)[],
      _s: (Arrayish)[]
    ): Promise<BigNumber>;

    withdrawERC721X(
      tokenId: BigNumberish,
      amount: BigNumberish,
      contractAddress: string,
      _valIndexes: (BigNumberish)[],
      _v: (BigNumberish)[],
      _r: (Arrayish)[],
      _s: (Arrayish)[]
    ): Promise<BigNumber>;

    withdrawERC721(
      uid: BigNumberish,
      contractAddress: string,
      _valIndexes: (BigNumberish)[],
      _v: (BigNumberish)[],
      _r: (Arrayish)[],
      _s: (Arrayish)[]
    ): Promise<BigNumber>;

    withdrawETH(
      amount: BigNumberish,
      _valIndexes: (BigNumberish)[],
      _v: (BigNumberish)[],
      _r: (Arrayish)[],
      _s: (Arrayish)[]
    ): Promise<BigNumber>;

    onERC721XReceived(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _amount: BigNumberish,
      _data: Arrayish
    ): Promise<BigNumber>;

    onERC721XBatchReceived(
      _operator: string,
      _from: string,
      _types: (BigNumberish)[],
      _amounts: (BigNumberish)[],
      _data: Arrayish
    ): Promise<BigNumber>;

    onERC721Received(
      _operator: string,
      _from: string,
      _uid: BigNumberish,
      _data: Arrayish
    ): Promise<BigNumber>;
  };
}
